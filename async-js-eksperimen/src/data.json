<<<<<<< HEAD
{
    "users": [
      {
        "id": 1,
        "name": "John Doe",
        "email": "john.doe@example.com",
        "posts": [
          {
            "id": 101,
            "title": "Introduction to Asynchronous JavaScript",
            "content": "Asynchronous JavaScript allows for non-blocking operations, improving the performance and user experience of web applications.",
            "comments": [
              {
                "id": 1001,
                "user": "Jane Smith",
                "comment": "Great article! Very informative."
              },
              {
                "id": 1002,
                "user": "Mike Brown",
                "comment": "Thanks for the explanation. I learned a lot."
              }
            ]
          },
          {
            "id": 102,
            "title": "Understanding Promises in JavaScript",
            "content": "Promises in JavaScript represent the eventual completion (or failure) of an asynchronous operation, providing a cleaner, more readable way to handle asynchronous code.",
            "comments": [
              {
                "id": 1003,
                "user": "Sarah Johnson",
                "comment": "Promises have made my code much easier to read."
              }
            ]
          }
        ]
      },
      {
        "id": 2,
        "name": "Alice Johnson",
        "email": "alice.johnson@example.com",
        "posts": [
          {
            "id": 103,
            "title": "Mastering Fetch API",
            "content": "The Fetch API provides a more powerful and flexible feature set for making HTTP requests in JavaScript.",
            "comments": [
              {
                "id": 1004,
                "user": "Chris Lee",
                "comment": "The Fetch API has completely changed how I make requests in JavaScript."
              },
              {
                "id": 1005,
                "user": "Patricia Gomez",
                "comment": "Excellent overview of the Fetch API!"
              }
            ]
          },
          {
            "id": 104,
            "title": "Async/Await: The Syntactic Sugar of Promises",
            "content": "Async/Await is a syntactic sugar built on Promises, providing a more synchronous style for handling asynchronous code.",
            "comments": [
              {
                "id": 1006,
                "user": "Daniel Kim",
                "comment": "Async/await has made my life so much easier."
              },
              {
                "id": 1007,
                "user": "Nancy Wilson",
                "comment": "Thanks for the clear explanation. Async/await is now my go-to method."
              }
            ]
          }
        ]
      },
      {
        "id": 3,
        "name": "Robert Brown",
        "email": "robert.brown@example.com",
        "posts": [
          {
            "id": 105,
            "title": "Handling Errors in Asynchronous JavaScript",
            "content": "Proper error handling in asynchronous code is crucial for building robust applications. Learn how to catch and manage errors effectively.",
            "comments": [
              {
                "id": 1008,
                "user": "Emma Davis",
                "comment": "This article helped me understand error handling much better."
              },
              {
                "id": 1009,
                "user": "James Martinez",
                "comment": "Error handling is so important. Thanks for the tips!"
              }
            ]
          }
        ]
      }
    ],
    "products": [
      {
        "id": 1,
        "name": "JavaScript for Beginners",
        "price": 29.99,
        "category": "Books",
        "rating": 4.5,
        "reviews": [
          {
            "id": 2001,
            "user": "Linda White",
            "review": "Excellent book for beginners. Highly recommend!"
          },
          {
            "id": 2002,
            "user": "George King",
            "review": "Good book, but some concepts are not explained in detail."
          }
        ]
      },
      {
        "id": 2,
        "name": "Advanced JavaScript Concepts",
        "price": 49.99,
        "category": "Books",
        "rating": 4.7,
        "reviews": [
          {
            "id": 2003,
            "user": "Amy Hall",
            "review": "Perfect for experienced developers. Deep dives into the language."
          },
          {
            "id": 2004,
            "user": "Frank Moore",
            "review": "A bit challenging, but worth the effort."
          }
        ]
      },
      {
        "id": 3,
        "name": "JavaScript: The Definitive Guide",
        "price": 39.99,
        "category": "Books",
        "rating": 4.8,
        "reviews": [
          {
            "id": 2005,
            "user": "Susan Scott",
            "review": "A must-have for any JavaScript developer."
          },
          {
            "id": 2006,
            "user": "Charles Green",
            "review": "Extremely comprehensive. Covers almost everything."
          }
        ]
      }
    ]
  }
=======
{
    "users": [
      {
        "id": 1,
        "name": "John Doe",
        "email": "john.doe@example.com",
        "posts": [
          {
            "id": 101,
            "title": "Introduction to Asynchronous JavaScript",
            "content": "Asynchronous JavaScript allows for non-blocking operations, improving the performance and user experience of web applications.",
            "comments": [
              {
                "id": 1001,
                "user": "Jane Smith",
                "comment": "Great article! Very informative."
              },
              {
                "id": 1002,
                "user": "Mike Brown",
                "comment": "Thanks for the explanation. I learned a lot."
              }
            ]
          },
          {
            "id": 102,
            "title": "Understanding Promises in JavaScript",
            "content": "Promises in JavaScript represent the eventual completion (or failure) of an asynchronous operation, providing a cleaner, more readable way to handle asynchronous code.",
            "comments": [
              {
                "id": 1003,
                "user": "Sarah Johnson",
                "comment": "Promises have made my code much easier to read."
              }
            ]
          }
        ]
      },
      {
        "id": 2,
        "name": "Alice Johnson",
        "email": "alice.johnson@example.com",
        "posts": [
          {
            "id": 103,
            "title": "Mastering Fetch API",
            "content": "The Fetch API provides a more powerful and flexible feature set for making HTTP requests in JavaScript.",
            "comments": [
              {
                "id": 1004,
                "user": "Chris Lee",
                "comment": "The Fetch API has completely changed how I make requests in JavaScript."
              },
              {
                "id": 1005,
                "user": "Patricia Gomez",
                "comment": "Excellent overview of the Fetch API!"
              }
            ]
          },
          {
            "id": 104,
            "title": "Async/Await: The Syntactic Sugar of Promises",
            "content": "Async/Await is a syntactic sugar built on Promises, providing a more synchronous style for handling asynchronous code.",
            "comments": [
              {
                "id": 1006,
                "user": "Daniel Kim",
                "comment": "Async/await has made my life so much easier."
              },
              {
                "id": 1007,
                "user": "Nancy Wilson",
                "comment": "Thanks for the clear explanation. Async/await is now my go-to method."
              }
            ]
          }
        ]
      },
      {
        "id": 3,
        "name": "Robert Brown",
        "email": "robert.brown@example.com",
        "posts": [
          {
            "id": 105,
            "title": "Handling Errors in Asynchronous JavaScript",
            "content": "Proper error handling in asynchronous code is crucial for building robust applications. Learn how to catch and manage errors effectively.",
            "comments": [
              {
                "id": 1008,
                "user": "Emma Davis",
                "comment": "This article helped me understand error handling much better."
              },
              {
                "id": 1009,
                "user": "James Martinez",
                "comment": "Error handling is so important. Thanks for the tips!"
              }
            ]
          }
        ]
      }
    ],
    "products": [
      {
        "id": 1,
        "name": "JavaScript for Beginners",
        "price": 29.99,
        "category": "Books",
        "rating": 4.5,
        "reviews": [
          {
            "id": 2001,
            "user": "Linda White",
            "review": "Excellent book for beginners. Highly recommend!"
          },
          {
            "id": 2002,
            "user": "George King",
            "review": "Good book, but some concepts are not explained in detail."
          }
        ]
      },
      {
        "id": 2,
        "name": "Advanced JavaScript Concepts",
        "price": 49.99,
        "category": "Books",
        "rating": 4.7,
        "reviews": [
          {
            "id": 2003,
            "user": "Amy Hall",
            "review": "Perfect for experienced developers. Deep dives into the language."
          },
          {
            "id": 2004,
            "user": "Frank Moore",
            "review": "A bit challenging, but worth the effort."
          }
        ]
      },
      {
        "id": 3,
        "name": "JavaScript: The Definitive Guide",
        "price": 39.99,
        "category": "Books",
        "rating": 4.8,
        "reviews": [
          {
            "id": 2005,
            "user": "Susan Scott",
            "review": "A must-have for any JavaScript developer."
          },
          {
            "id": 2006,
            "user": "Charles Green",
            "review": "Extremely comprehensive. Covers almost everything."
          }
        ]
      }
    ]
  }
>>>>>>> 23708775eb1ea4dbedc08c21310a9d92cd1a84e1
  